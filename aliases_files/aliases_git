# Git aliases
branch_name() {
  branch_name=$(git symbolic-ref -q HEAD)
  branch_name=${branch_name##refs/heads/}
  branch_name=${branch_name:-HEAD}
  print $branch_name
}

alias g='git'
# alias opgt='open https://github.$(git config remote.origin.url | cut -f2 -d. | tr ':' /)'
# alias opgtb='open https://github.$(git config remote.origin.url | cut -f2 -d. | tr ':' /)/tree/$(branch_name)'
alias gcl='git clone'
alias ga='git add'
alias gc='git commit -m'
alias gce='git commit --no-verify --allow-empty -m'
alias gcn='git commit --no-verify -m'
alias gch='git checkout'
alias gs='clean && git status'
# alias gco='git checkout '
alias gcob='git checkout -b'
alias gb='clean && git branch'
alias gbm='clean && git branch --merged | egrep -v "(^\*|main|master|dev)"'
alias gbmd='clean && git branch --merged | egrep -v "(^\*|main|master|dev)" | xargs git branch -d'
alias gd="clean && git diff"
alias gg="clean && git grep --color -n"
# alias gk="gitk 2>/dev/null --all &"
# alias gpl='git pull origin'
# alias gps='git push origin'
alias gpr='git remote prune origin'

alias pull='git pull origin $(branch_name)'
alias push='git push origin $(branch_name)'

alias gm='git merge'
alias gl='git log'
alias gly='git log --author=Yaser'
# alias gsh='git show'
# alias grm='git rm'
# alias grmf='git ls-files --deleted -z | xargs -0 git rm'
alias grlc='git reset --soft HEAD^' # Remove last commit
alias grh='git reset HEAD' # Reset checked files
alias gss='git stash save'
alias gsp='git stash pop'
alias gt='git tag'
alias glt='git describe --abbrev=0 --tags'

alias gppro="git push prod main:master"
alias gpint="git push int master"
function gpsta() {
  BRANCH="`git branch | grep \* | cut -d ' ' -f2`"
  CMD="git push stage $BRANCH:master"
  eval $CMD
}

function gco() {
  if [ "$@" = "." ]; then
    print "Are you sure??"
    read -rs -k 1 ans
  case "${ans}" in
      y|Y)
        git checkout .
        return 0
        ;;

      *)  # This is the default
        return 1

        esac
  else
    git checkout "$@"
  fi
}

function gpi() {
  git push $1 master
}

function gpti() {
  TAG="`git describe --abbrev=0 --tags`"
  CMD="git push $1 $TAG:master"
  eval $CMD
}

function gpt() {
  TAG="`git describe --abbrev=0 --tags`"
  CMD="git push origin $TAG"
  eval $CMD
}

function gdt() {
  TAG="`git describe --abbrev=0 --tags`"
  CMD="git push prod $TAG:master"
  eval $CMD
}

function gfiles() {
  BRANCH="`git rev-parse --abbrev-ref HEAD`"
  CMD="git diff --name-only $BRANCH $(git merge-base $BRANCH master)"
  eval $CMD
}
